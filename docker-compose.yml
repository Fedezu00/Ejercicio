

services:
  app:
    build: .   
    container_name: flask_app  
    env_file: #Carga las variables de entorno
      - .env
    ports:    #Mapea el puerto 5000 del host al 5000 del container
      - "5000:5000"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:   
      redis:
        condition: service_healthy #Verifica que redis este healthy
    restart: unless-stopped #Reinicia el container si esta caido

  redis:
    image: redis:7-alpine
    container_name: redis_service
    command: ["redis-server", "--appendonly", "yes"]  #Inicia el redis server
    ports:
      - "6379:6379"   #Expone el puerto 6379 al puerto 6379 del container
    volumes:
      - redis_data:/data
    healthcheck:      # Test que va a seguir para marcar si es healthy o unhealthy  
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s # Tiempo entre cada test
      timeout: 1s  #tiempo maximo de espera
      retries: 30  #Cantidad de intentos
    restart: unless-stopped   #Reinicia el container si esta caido

volumes:
  redis_data:
